<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ibootz.demomybatis.mapper.exam.ExamMapper">
    <resultMap id="BaseResultMap" type="com.ibootz.demomybatis.model.exam.Exam">
        <!--@mbg.generated-->
        <!--@Table core_exam-->
        <id column="pid" jdbcType="VARCHAR" property="pid"/>
        <result column="orgId" jdbcType="VARCHAR" property="orgId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="repeatNum" jdbcType="TINYINT" property="repeatNum"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="limitTime" jdbcType="INTEGER" property="limitTime"/>
        <result column="passType" jdbcType="TINYINT" property="passType"/>
        <result column="standard" jdbcType="INTEGER" property="standard"/>
        <result column="totalNum" jdbcType="INTEGER" property="totalNum"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="difficulty" jdbcType="INTEGER" property="difficulty"/>
        <result column="auditStatus" jdbcType="TINYINT" property="auditStatus"/>
        <result column="isReview" jdbcType="TINYINT" property="isReview"/>
        <result column="isOpen" jdbcType="TINYINT" property="isOpen"/>
        <result column="isPublish" jdbcType="TINYINT" property="isPublish"/>
        <result column="isSubjectShuffle" jdbcType="TINYINT" property="isSubjectShuffle"/>
        <result column="isItemShuffle" jdbcType="TINYINT" property="isItemShuffle"/>
        <result column="isAnonymAudit" jdbcType="TINYINT" property="isAnonymAudit"/>
        <result column="isCompletionAudit" jdbcType="TINYINT" property="isCompletionAudit"/>
        <result column="isOutward" jdbcType="TINYINT" property="isOutward"/>
        <result column="clientType" jdbcType="TINYINT" property="clientType"/>
        <result column="breakNum" jdbcType="TINYINT" property="breakNum"/>
        <result column="studyPoints" jdbcType="DOUBLE" property="studyPoints"/>
        <result column="studyPlanId" jdbcType="VARCHAR" property="studyPlanId"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updater" jdbcType="VARCHAR" property="updater"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.ibootz.demomybatis.model.exam.Exam">
        <!--@mbg.generated-->
        <!--@Table core_exam-->
        <result column="logoUrl" jdbcType="LONGVARCHAR" property="logoUrl"/>
        <result column="pauseContent" jdbcType="LONGVARCHAR" property="pauseContent"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        pid, orgId, `name`, description, repeatNum, startTime, endTime, limitTime, passType,
        `standard`, totalNum, `status`, difficulty, auditStatus, isReview, isOpen, isPublish,
        isSubjectShuffle, isItemShuffle, isAnonymAudit, isCompletionAudit, isOutward, clientType,
        breakNum, studyPoints, studyPlanId, creator, createTime, updater, updateTime
    </sql>
    <sql id="Blob_Column_List">
        <!--@mbg.generated-->
        logoUrl, pauseContent
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from core_exam
        where pid = #{pid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from core_exam
        where pid = #{pid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="pid" keyProperty="pid"
            parameterType="com.ibootz.demomybatis.model.exam.Exam" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into core_exam (orgId, `name`, description,
        repeatNum, startTime, endTime,
        limitTime, passType, `standard`,
        totalNum, `status`, difficulty,
        auditStatus, isReview, isOpen,
        isPublish, isSubjectShuffle, isItemShuffle,
        isAnonymAudit, isCompletionAudit, isOutward,
        clientType, breakNum, studyPoints,
        studyPlanId, creator, createTime,
        updater, updateTime, logoUrl,
        pauseContent)
        values (#{orgId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{repeatNum,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP},
        #{endTime,jdbcType=TIMESTAMP},
        #{limitTime,jdbcType=INTEGER}, #{passType,jdbcType=TINYINT}, #{standard,jdbcType=INTEGER},
        #{totalNum,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{difficulty,jdbcType=INTEGER},
        #{auditStatus,jdbcType=TINYINT}, #{isReview,jdbcType=TINYINT}, #{isOpen,jdbcType=TINYINT},
        #{isPublish,jdbcType=TINYINT}, #{isSubjectShuffle,jdbcType=TINYINT},
        #{isItemShuffle,jdbcType=TINYINT},
        #{isAnonymAudit,jdbcType=TINYINT}, #{isCompletionAudit,jdbcType=TINYINT},
        #{isOutward,jdbcType=TINYINT},
        #{clientType,jdbcType=TINYINT}, #{breakNum,jdbcType=TINYINT},
        #{studyPoints,jdbcType=DOUBLE},
        #{studyPlanId,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
        #{logoUrl,jdbcType=LONGVARCHAR},
        #{pauseContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="pid" keyProperty="pid"
            parameterType="com.ibootz.demomybatis.model.exam.Exam" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into core_exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orgId != null and orgId != ''">
                orgId,
            </if>
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="description != null and description != ''">
                description,
            </if>
            <if test="repeatNum != null">
                repeatNum,
            </if>
            <if test="startTime != null">
                startTime,
            </if>
            <if test="endTime != null">
                endTime,
            </if>
            <if test="limitTime != null">
                limitTime,
            </if>
            <if test="passType != null">
                passType,
            </if>
            <if test="standard != null">
                `standard`,
            </if>
            <if test="totalNum != null">
                totalNum,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="difficulty != null">
                difficulty,
            </if>
            <if test="auditStatus != null">
                auditStatus,
            </if>
            <if test="isReview != null">
                isReview,
            </if>
            <if test="isOpen != null">
                isOpen,
            </if>
            <if test="isPublish != null">
                isPublish,
            </if>
            <if test="isSubjectShuffle != null">
                isSubjectShuffle,
            </if>
            <if test="isItemShuffle != null">
                isItemShuffle,
            </if>
            <if test="isAnonymAudit != null">
                isAnonymAudit,
            </if>
            <if test="isCompletionAudit != null">
                isCompletionAudit,
            </if>
            <if test="isOutward != null">
                isOutward,
            </if>
            <if test="clientType != null">
                clientType,
            </if>
            <if test="breakNum != null">
                breakNum,
            </if>
            <if test="studyPoints != null">
                studyPoints,
            </if>
            <if test="studyPlanId != null and studyPlanId != ''">
                studyPlanId,
            </if>
            <if test="creator != null and creator != ''">
                creator,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updater != null and updater != ''">
                updater,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="logoUrl != null and logoUrl != ''">
                logoUrl,
            </if>
            <if test="pauseContent != null and pauseContent != ''">
                pauseContent,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orgId != null and orgId != ''">
                #{orgId,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="repeatNum != null">
                #{repeatNum,jdbcType=TINYINT},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="limitTime != null">
                #{limitTime,jdbcType=INTEGER},
            </if>
            <if test="passType != null">
                #{passType,jdbcType=TINYINT},
            </if>
            <if test="standard != null">
                #{standard,jdbcType=INTEGER},
            </if>
            <if test="totalNum != null">
                #{totalNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="difficulty != null">
                #{difficulty,jdbcType=INTEGER},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=TINYINT},
            </if>
            <if test="isReview != null">
                #{isReview,jdbcType=TINYINT},
            </if>
            <if test="isOpen != null">
                #{isOpen,jdbcType=TINYINT},
            </if>
            <if test="isPublish != null">
                #{isPublish,jdbcType=TINYINT},
            </if>
            <if test="isSubjectShuffle != null">
                #{isSubjectShuffle,jdbcType=TINYINT},
            </if>
            <if test="isItemShuffle != null">
                #{isItemShuffle,jdbcType=TINYINT},
            </if>
            <if test="isAnonymAudit != null">
                #{isAnonymAudit,jdbcType=TINYINT},
            </if>
            <if test="isCompletionAudit != null">
                #{isCompletionAudit,jdbcType=TINYINT},
            </if>
            <if test="isOutward != null">
                #{isOutward,jdbcType=TINYINT},
            </if>
            <if test="clientType != null">
                #{clientType,jdbcType=TINYINT},
            </if>
            <if test="breakNum != null">
                #{breakNum,jdbcType=TINYINT},
            </if>
            <if test="studyPoints != null">
                #{studyPoints,jdbcType=DOUBLE},
            </if>
            <if test="studyPlanId != null and studyPlanId != ''">
                #{studyPlanId,jdbcType=VARCHAR},
            </if>
            <if test="creator != null and creator != ''">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updater != null and updater != ''">
                #{updater,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logoUrl != null and logoUrl != ''">
                #{logoUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="pauseContent != null and pauseContent != ''">
                #{pauseContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ibootz.demomybatis.model.exam.Exam">
        <!--@mbg.generated-->
        update core_exam
        <set>
            <if test="orgId != null and orgId != ''">
                orgId = #{orgId,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null and description != ''">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="repeatNum != null">
                repeatNum = #{repeatNum,jdbcType=TINYINT},
            </if>
            <if test="startTime != null">
                startTime = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                endTime = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="limitTime != null">
                limitTime = #{limitTime,jdbcType=INTEGER},
            </if>
            <if test="passType != null">
                passType = #{passType,jdbcType=TINYINT},
            </if>
            <if test="standard != null">
                `standard` = #{standard,jdbcType=INTEGER},
            </if>
            <if test="totalNum != null">
                totalNum = #{totalNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="difficulty != null">
                difficulty = #{difficulty,jdbcType=INTEGER},
            </if>
            <if test="auditStatus != null">
                auditStatus = #{auditStatus,jdbcType=TINYINT},
            </if>
            <if test="isReview != null">
                isReview = #{isReview,jdbcType=TINYINT},
            </if>
            <if test="isOpen != null">
                isOpen = #{isOpen,jdbcType=TINYINT},
            </if>
            <if test="isPublish != null">
                isPublish = #{isPublish,jdbcType=TINYINT},
            </if>
            <if test="isSubjectShuffle != null">
                isSubjectShuffle = #{isSubjectShuffle,jdbcType=TINYINT},
            </if>
            <if test="isItemShuffle != null">
                isItemShuffle = #{isItemShuffle,jdbcType=TINYINT},
            </if>
            <if test="isAnonymAudit != null">
                isAnonymAudit = #{isAnonymAudit,jdbcType=TINYINT},
            </if>
            <if test="isCompletionAudit != null">
                isCompletionAudit = #{isCompletionAudit,jdbcType=TINYINT},
            </if>
            <if test="isOutward != null">
                isOutward = #{isOutward,jdbcType=TINYINT},
            </if>
            <if test="clientType != null">
                clientType = #{clientType,jdbcType=TINYINT},
            </if>
            <if test="breakNum != null">
                breakNum = #{breakNum,jdbcType=TINYINT},
            </if>
            <if test="studyPoints != null">
                studyPoints = #{studyPoints,jdbcType=DOUBLE},
            </if>
            <if test="studyPlanId != null and studyPlanId != ''">
                studyPlanId = #{studyPlanId,jdbcType=VARCHAR},
            </if>
            <if test="creator != null and creator != ''">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updater != null and updater != ''">
                updater = #{updater,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logoUrl != null and logoUrl != ''">
                logoUrl = #{logoUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="pauseContent != null and pauseContent != ''">
                pauseContent = #{pauseContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where pid = #{pid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ibootz.demomybatis.model.exam.Exam">
        <!--@mbg.generated-->
        update core_exam
        set orgId = #{orgId,jdbcType=VARCHAR},
        `name` = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        repeatNum = #{repeatNum,jdbcType=TINYINT},
        startTime = #{startTime,jdbcType=TIMESTAMP},
        endTime = #{endTime,jdbcType=TIMESTAMP},
        limitTime = #{limitTime,jdbcType=INTEGER},
        passType = #{passType,jdbcType=TINYINT},
        `standard` = #{standard,jdbcType=INTEGER},
        totalNum = #{totalNum,jdbcType=INTEGER},
        `status` = #{status,jdbcType=TINYINT},
        difficulty = #{difficulty,jdbcType=INTEGER},
        auditStatus = #{auditStatus,jdbcType=TINYINT},
        isReview = #{isReview,jdbcType=TINYINT},
        isOpen = #{isOpen,jdbcType=TINYINT},
        isPublish = #{isPublish,jdbcType=TINYINT},
        isSubjectShuffle = #{isSubjectShuffle,jdbcType=TINYINT},
        isItemShuffle = #{isItemShuffle,jdbcType=TINYINT},
        isAnonymAudit = #{isAnonymAudit,jdbcType=TINYINT},
        isCompletionAudit = #{isCompletionAudit,jdbcType=TINYINT},
        isOutward = #{isOutward,jdbcType=TINYINT},
        clientType = #{clientType,jdbcType=TINYINT},
        breakNum = #{breakNum,jdbcType=TINYINT},
        studyPoints = #{studyPoints,jdbcType=DOUBLE},
        studyPlanId = #{studyPlanId,jdbcType=VARCHAR},
        creator = #{creator,jdbcType=VARCHAR},
        createTime = #{createTime,jdbcType=TIMESTAMP},
        updater = #{updater,jdbcType=VARCHAR},
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
        logoUrl = #{logoUrl,jdbcType=LONGVARCHAR},
        pauseContent = #{pauseContent,jdbcType=LONGVARCHAR}
        where pid = #{pid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ibootz.demomybatis.model.exam.Exam">
        <!--@mbg.generated-->
        update core_exam
        set orgId = #{orgId,jdbcType=VARCHAR},
        `name` = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        repeatNum = #{repeatNum,jdbcType=TINYINT},
        startTime = #{startTime,jdbcType=TIMESTAMP},
        endTime = #{endTime,jdbcType=TIMESTAMP},
        limitTime = #{limitTime,jdbcType=INTEGER},
        passType = #{passType,jdbcType=TINYINT},
        `standard` = #{standard,jdbcType=INTEGER},
        totalNum = #{totalNum,jdbcType=INTEGER},
        `status` = #{status,jdbcType=TINYINT},
        difficulty = #{difficulty,jdbcType=INTEGER},
        auditStatus = #{auditStatus,jdbcType=TINYINT},
        isReview = #{isReview,jdbcType=TINYINT},
        isOpen = #{isOpen,jdbcType=TINYINT},
        isPublish = #{isPublish,jdbcType=TINYINT},
        isSubjectShuffle = #{isSubjectShuffle,jdbcType=TINYINT},
        isItemShuffle = #{isItemShuffle,jdbcType=TINYINT},
        isAnonymAudit = #{isAnonymAudit,jdbcType=TINYINT},
        isCompletionAudit = #{isCompletionAudit,jdbcType=TINYINT},
        isOutward = #{isOutward,jdbcType=TINYINT},
        clientType = #{clientType,jdbcType=TINYINT},
        breakNum = #{breakNum,jdbcType=TINYINT},
        studyPoints = #{studyPoints,jdbcType=DOUBLE},
        studyPlanId = #{studyPlanId,jdbcType=VARCHAR},
        creator = #{creator,jdbcType=VARCHAR},
        createTime = #{createTime,jdbcType=TIMESTAMP},
        updater = #{updater,jdbcType=VARCHAR},
        updateTime = #{updateTime,jdbcType=TIMESTAMP}
        where pid = #{pid,jdbcType=VARCHAR}
    </update>
    <select id="findByOrgIdAndPassType" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from core_exam
        where orgId=#{orgId,jdbcType=VARCHAR} and passType=#{passType,jdbcType=TINYINT}
    </select>
    <insert id="batchInsert" keyColumn="pid" keyProperty="pid" parameterType="map"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into core_exam
        (orgId, `name`, description, repeatNum, startTime, endTime, limitTime, passType,
        `standard`, totalNum, `status`, difficulty, auditStatus, isReview, isOpen, isPublish,
        isSubjectShuffle, isItemShuffle, isAnonymAudit, isCompletionAudit, isOutward, clientType,
        breakNum, studyPoints, studyPlanId, creator, createTime, updater, updateTime, logoUrl,
        pauseContent)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orgId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR},
            #{item.repeatNum,jdbcType=TINYINT}, #{item.startTime,jdbcType=TIMESTAMP},
            #{item.endTime,jdbcType=TIMESTAMP},
            #{item.limitTime,jdbcType=INTEGER}, #{item.passType,jdbcType=TINYINT},
            #{item.standard,jdbcType=INTEGER},
            #{item.totalNum,jdbcType=INTEGER}, #{item.status,jdbcType=TINYINT},
            #{item.difficulty,jdbcType=INTEGER},
            #{item.auditStatus,jdbcType=TINYINT}, #{item.isReview,jdbcType=TINYINT},
            #{item.isOpen,jdbcType=TINYINT},
            #{item.isPublish,jdbcType=TINYINT}, #{item.isSubjectShuffle,jdbcType=TINYINT},
            #{item.isItemShuffle,jdbcType=TINYINT}, #{item.isAnonymAudit,jdbcType=TINYINT},
            #{item.isCompletionAudit,jdbcType=TINYINT}, #{item.isOutward,jdbcType=TINYINT},
            #{item.clientType,jdbcType=TINYINT}, #{item.breakNum,jdbcType=TINYINT},
            #{item.studyPoints,jdbcType=DOUBLE},
            #{item.studyPlanId,jdbcType=VARCHAR}, #{item.creator,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updater,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.logoUrl,jdbcType=LONGVARCHAR},
            #{item.pauseContent,jdbcType=LONGVARCHAR})
        </foreach>
    </insert>
</mapper>